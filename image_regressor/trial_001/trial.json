{"trial_id": "001", "hyperparameters": {"space": [{"class_name": "Boolean", "config": {"name": "image_block_1/normalize", "default": false, "conditions": []}}, {"class_name": "Boolean", "config": {"name": "image_block_1/augment", "default": false, "conditions": []}}, {"class_name": "Choice", "config": {"name": "image_block_1/block_type", "default": "resnet", "conditions": [], "values": ["resnet", "xception", "vanilla", "efficient"], "ordered": false}}, {"class_name": "Boolean", "config": {"name": "image_block_1/res_net_block_1/pretrained", "default": false, "conditions": [{"class_name": "Parent", "config": {"name": "image_block_1/block_type", "values": ["resnet"]}}]}}, {"class_name": "Choice", "config": {"name": "image_block_1/res_net_block_1/version", "default": "resnet50", "conditions": [{"class_name": "Parent", "config": {"name": "image_block_1/block_type", "values": ["resnet"]}}], "values": ["resnet50", "resnet101", "resnet152", "resnet50_v2", "resnet101_v2", "resnet152_v2"], "ordered": false}}, {"class_name": "Boolean", "config": {"name": "image_block_1/res_net_block_1/imagenet_size", "default": false, "conditions": [{"class_name": "Parent", "config": {"name": "image_block_1/block_type", "values": ["resnet"]}}]}}, {"class_name": "Choice", "config": {"name": "regression_head_1/dropout", "default": 0, "conditions": [], "values": [0.0, 0.25, 0.5], "ordered": true}}, {"class_name": "Choice", "config": {"name": "optimizer", "default": "adam", "conditions": [], "values": ["adam", "sgd", "adam_weight_decay"], "ordered": false}}, {"class_name": "Choice", "config": {"name": "learning_rate", "default": 0.001, "conditions": [], "values": [0.1, 0.01, 0.001, 0.0001, 2e-05, 1e-05], "ordered": true}}], "values": {"image_block_1/normalize": false, "image_block_1/augment": false, "image_block_1/block_type": "resnet", "image_block_1/res_net_block_1/pretrained": false, "image_block_1/res_net_block_1/version": "resnet50", "image_block_1/res_net_block_1/imagenet_size": false, "regression_head_1/dropout": 0, "optimizer": "adam", "learning_rate": 0.001}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"/opt/homebrew/Caskroom/miniconda/base/envs/mixedint/lib/python3.9/site-packages/keras_tuner/src/engine/base_tuner.py\", line 273, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"/opt/homebrew/Caskroom/miniconda/base/envs/mixedint/lib/python3.9/site-packages/keras_tuner/src/engine/base_tuner.py\", line 238, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n  File \"/opt/homebrew/Caskroom/miniconda/base/envs/mixedint/lib/python3.9/site-packages/keras_tuner/src/engine/tuner.py\", line 314, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n  File \"/opt/homebrew/Caskroom/miniconda/base/envs/mixedint/lib/python3.9/site-packages/autokeras/engine/tuner.py\", line 101, in _build_and_fit_model\n    _, history = utils.fit_with_adaptive_batch_size(\n  File \"/opt/homebrew/Caskroom/miniconda/base/envs/mixedint/lib/python3.9/site-packages/autokeras/utils/utils.py\", line 88, in fit_with_adaptive_batch_size\n    history = run_with_adaptive_batch_size(\n  File \"/opt/homebrew/Caskroom/miniconda/base/envs/mixedint/lib/python3.9/site-packages/autokeras/utils/utils.py\", line 101, in run_with_adaptive_batch_size\n    history = func(x=x, validation_data=validation_data, **fit_kwargs)\n  File \"/opt/homebrew/Caskroom/miniconda/base/envs/mixedint/lib/python3.9/site-packages/autokeras/utils/utils.py\", line 89, in <lambda>\n    batch_size, lambda **kwargs: model.fit(**kwargs), **fit_kwargs\n  File \"/opt/homebrew/Caskroom/miniconda/base/envs/mixedint/lib/python3.9/site-packages/keras/src/utils/traceback_utils.py\", line 70, in error_handler\n    raise e.with_traceback(filtered_tb) from None\n  File \"/var/folders/4r/vnn2211x2nlcf16_xmg0lp6c0000gn/T/__autograph_generated_filer3i4z5sf.py\", line 15, in tf__test_function\n    retval_ = ag__.converted_call(ag__.ld(step_function), (ag__.ld(self), ag__.ld(iterator)), None, fscope)\nValueError: in user code:\n\n    File \"/opt/homebrew/Caskroom/miniconda/base/envs/mixedint/lib/python3.9/site-packages/keras/src/engine/training.py\", line 1972, in test_function  *\n        return step_function(self, iterator)\n    File \"/opt/homebrew/Caskroom/miniconda/base/envs/mixedint/lib/python3.9/site-packages/keras/src/engine/training.py\", line 1956, in step_function  **\n        outputs = model.distribute_strategy.run(run_step, args=(data,))\n    File \"/opt/homebrew/Caskroom/miniconda/base/envs/mixedint/lib/python3.9/site-packages/keras/src/engine/training.py\", line 1944, in run_step  **\n        outputs = model.test_step(data)\n    File \"/opt/homebrew/Caskroom/miniconda/base/envs/mixedint/lib/python3.9/site-packages/keras/src/engine/training.py\", line 1850, in test_step\n        y_pred = self(x, training=False)\n    File \"/opt/homebrew/Caskroom/miniconda/base/envs/mixedint/lib/python3.9/site-packages/keras/src/utils/traceback_utils.py\", line 70, in error_handler\n        raise e.with_traceback(filtered_tb) from None\n    File \"/opt/homebrew/Caskroom/miniconda/base/envs/mixedint/lib/python3.9/site-packages/keras/src/engine/input_spec.py\", line 298, in assert_input_compatibility\n        raise ValueError(\n\n    ValueError: Input 0 of layer \"model\" is incompatible with the layer: expected shape=(None, 844, 1500, 3), found shape=(None, 1500, 3)\n\n"}